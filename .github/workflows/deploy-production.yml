name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip tests (not recommended)'
        required: false
        default: false
        type: boolean

concurrency:
  group: deploy-production
  cancel-in-progress: false

jobs:
  pre-deployment-tests:
    name: Pre-deployment Tests
    runs-on: ubuntu-latest
    if: ${{ !inputs.skip_tests }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Run full test suite
        run: npm run test

      - name: Run linting and type checking
        run: |
          npm run lint
          npm run type-check

  deploy-infrastructure:
    name: Deploy Infrastructure (Production)
    runs-on: ubuntu-latest
    needs: pre-deployment-tests
    if: always() && (needs.pre-deployment-tests.result == 'success' || inputs.skip_tests)
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        run: npm ci

      - name: Build infrastructure
        run: |
          cd infrastructure
          npm run build

      - name: Deploy infrastructure with CDK
        run: |
          cd infrastructure
          npm run deploy:prod

  deploy-api:
    name: Deploy API (Production)
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install dependencies
        run: npm ci

      - name: Build shared packages
        run: npm run build

      - name: Deploy API with Serverless
        run: |
          cd apps/api
          npm run deploy:prod
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PRODUCTION }}
          REDIS_URL: ${{ secrets.REDIS_URL_PRODUCTION }}
          JWT_SECRET: ${{ secrets.JWT_SECRET_PRODUCTION }}
          CORS_ORIGIN: ${{ secrets.CORS_ORIGIN_PRODUCTION }}

  deploy-web:
    name: Deploy Web Dashboard (Production)
    runs-on: ubuntu-latest
    needs: deploy-api
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build shared packages
        run: npm run build

      - name: Build web dashboard
        run: |
          cd apps/web
          npm run build
        env:
          VITE_API_URL: ${{ secrets.API_URL_PRODUCTION }}
          VITE_AWS_REGION: us-east-1
          VITE_USER_POOL_ID: ${{ secrets.USER_POOL_ID_PRODUCTION }}
          VITE_USER_POOL_CLIENT_ID: ${{ secrets.USER_POOL_CLIENT_ID_PRODUCTION }}

      - name: Deploy to Vercel (Production)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: apps/web
          vercel-args: '--prod --env STAGE=production'

  run-migrations:
    name: Run Database Migrations (Production)
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run database migrations
        run: |
          cd scripts
          node migrate-database.js
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_PRODUCTION }}

  production-smoke-tests:
    name: Run Production Smoke Tests
    runs-on: ubuntu-latest
    needs: [deploy-api, deploy-web]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run API health check
        run: |
          curl -f ${{ secrets.API_URL_PRODUCTION }}/health || exit 1

      - name: Run web app health check  
        run: |
          curl -f ${{ secrets.WEB_URL_PRODUCTION }} || exit 1

      - name: Run critical path tests
        run: |
          # Add critical user journey tests here
          echo "Production deployment successful!"

  notify-deployment:
    name: Notify Deployment Status
    runs-on: ubuntu-latest
    needs: [production-smoke-tests]
    if: always()
    
    steps:
      - name: Notify success
        if: needs.production-smoke-tests.result == 'success'
        run: |
          echo "✅ Production deployment successful!"
          # Add Slack/Discord/email notification here

      - name: Notify failure
        if: needs.production-smoke-tests.result == 'failure'
        run: |
          echo "❌ Production deployment failed!"
          # Add Slack/Discord/email notification here
          exit 1